// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: get_locations.sql

package db

import (
	"context"
)

const getAllLocations = `-- name: GetAllLocations :many

SELECT location_id, tub_id, shelf_id, "createdAt", "updatedAt"
FROM locations
ORDER BY location_id
`

// noinspection SqlResolveForFile
func (q *Queries) GetAllLocations(ctx context.Context) ([]Location, error) {
	rows, err := q.db.Query(ctx, getAllLocations)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Location
	for rows.Next() {
		var i Location
		if err := rows.Scan(
			&i.LocationID,
			&i.TubID,
			&i.ShelfID,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
