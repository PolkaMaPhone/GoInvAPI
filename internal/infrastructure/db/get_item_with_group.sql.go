// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: get_item_with_group.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getItemWithGroup = `-- name: GetItemWithGroup :one
SELECT items.item_id, items.name, items.description, items.category_id, items.group_id, items.location_id, items.is_stored, items."createdAt", items."updatedAt",
       groups.name        AS group_name,
       groups.description AS group_description
FROM items
         LEFT JOIN groups ON items.group_id = groups.group_id
WHERE item_id = $1
`

type GetItemWithGroupRow struct {
	ItemID           int32
	Name             string
	Description      pgtype.Text
	CategoryID       pgtype.Int4
	GroupID          pgtype.Int4
	LocationID       pgtype.Int4
	IsStored         pgtype.Bool
	CreatedAt        pgtype.Timestamptz
	UpdatedAt        pgtype.Timestamptz
	GroupName        pgtype.Text
	GroupDescription pgtype.Text
}

// noinspection SqlResolveForFile
func (q *Queries) GetItemWithGroup(ctx context.Context, itemID int32) (GetItemWithGroupRow, error) {
	row := q.db.QueryRow(ctx, getItemWithGroup, itemID)
	var i GetItemWithGroupRow
	err := row.Scan(
		&i.ItemID,
		&i.Name,
		&i.Description,
		&i.CategoryID,
		&i.GroupID,
		&i.LocationID,
		&i.IsStored,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.GroupName,
		&i.GroupDescription,
	)
	return i, err
}
