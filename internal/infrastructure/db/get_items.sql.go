// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: get_items.sql

package db

import (
	"context"
)

const getAllItems = `-- name: GetAllItems :many

SELECT item_id, name, description, category_id, group_id, location_id, is_stored, "createdAt", "updatedAt"
FROM items
ORDER BY item_id
`

// noinspection SqlResolveForFile
func (q *Queries) GetAllItems(ctx context.Context) ([]Item, error) {
	rows, err := q.db.Query(ctx, getAllItems)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Item
	for rows.Next() {
		var i Item
		if err := rows.Scan(
			&i.ItemID,
			&i.Name,
			&i.Description,
			&i.CategoryID,
			&i.GroupID,
			&i.LocationID,
			&i.IsStored,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
